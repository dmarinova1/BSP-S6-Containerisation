{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Optima-Bold;\f1\fswiss\fcharset0 Optima-Regular;\f2\fnil\fcharset0 Menlo-Regular;
\f3\fswiss\fcharset0 Helvetica;\f4\fswiss\fcharset0 Optima-Italic;\f5\fnil\fcharset0 LucidaGrande;
\f6\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red201\green202\blue202;\red0\green0\blue0;\red201\green202\blue202;
\red0\green0\blue233;}
{\*\expandedcolortbl;;\cssrgb\c82745\c83137\c83137;\cssrgb\c0\c1\c1;\cssrgb\c82734\c83126\c83023;
\cssrgb\c0\c0\c93333;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid1\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw11900\paperh16840\margl1440\margr1440\vieww20500\viewh13840\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\qc\partightenfactor0

\f0\b\fs28 \cf0 GLOSSARY
\f1\b0\fs24 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\qj\partightenfactor0
\cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\qj\partightenfactor0

\f0\b \cf0 Docker 
\f1\b0 = an open platform, written in Go language, for sharing, shipping, and running apps; allows to separate apps from our infrastructure to deliver software quickly; we can package and run an app within a container which provides security and isolation to run many containers on a host; using Docker we can manage the lifecycle of the containers\
\

\f0\b Container
\f1\b0  = a loosely isolated environment; a runnable instance of an image; defined by its image as well as configuration options provided when we created/started it; if removed, any changes, not stored in persistent storage, to its state disappear;  it is lightweight since it does not need a hypervisor; it runs directly within the kernel of host machine; for this reason, there is the possibility to run more containers than virtual machines (VMs) on given hardware combination; it can be run within host machines that are actually VMs; relatedly well isolated from other containers and its host machine; using Docker API or CLI we can create, start, stop, move or delete a container; containers can be connected to one or more networks, attach storage to it or create a new image based on its current state; the use of containers to deploy apps is called containerisation; \
	-> containerisation is increasingly popular because containers are flexible, lightweight, portable, loosely coupled, scalable, secure;\
\

\f0\b Virtual Machine (VM)
\f1\b0  = it resembles a physical machine since it has CPU, memory, disk to store files, can connect to Internet if needed, however, it exists only as code, a software defined computer running on top of a hypervisor; a software that allows to run OS within another OS (e.g. VirtualBox, VMware)\
\

\f0\b Hypervisor
\f1\b0  = a software that exists between a physical hardware and the VM; ensures each VM receives the resources it needs in an orderly manner (e.g. in case of Google Cloud, VMs are running in the cloud)\
\

\f0\b Cloud 
\f1\b0 = a network of powerful servers running hypervisors in data centres all over the world; the Internet is used to access information and services running on the cloud from app, browser, device;\
\

\f0\b Docker Engine
\f1\b0  = a client-server application with the following components:\
-> server which is a long-running program called a daemon process (
\f2 dockerd
\f1  command)\
-> REST API specifying interfaces that programs can use to talk to the daemon and instruct it what to do
\f3 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \

\f1 \cf3 \strokec4 -> a command line interface (CLI) client (the 
\f2 docker
\f1  command) which uses the REST API to control/interact with the docker daemon through scripting or direct CLI commands\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\

\f0\b Docker daemon 
\f1\b0 (
\f2 dockerd
\f1 ) = listens for Docker API requests and manages Docker objects; can communicate with other daemons to manage Docker services\
\

\f0\b Docker client 
\f1\b0 (
\f2 docker
\f1 ) = the primary way Docker users interact with Docker; the client can send commands to 
\f2 dockerd
\f1  to carry them out using the command docker run; 
\f2 docker
\f1  command uses the Docker API; the client can communicate with more than one daemon;\
\

\f0\b Docker registries
\f1\b0  = stores Docker images; e.g. Docker Hub is a public registry that anyone can use and Docker looks for images on Docker Hub by default; the commands 
\f2 docker pull
\f1  or 
\f2 docker run
\f1  pull the required images from the configured registry; the command 
\f2 docker push
\f1  pushes the image to our configured registry\
\

\f0\b Docker objects 
\f1\b0 = such as images, containers, networks, plugins, volumes, etc.\
\

\f0\b Image
\f1\b0  = a read-only template with instructions for creating a Docker container; often an image is based on another image with additional customisation; we can either create our own image or use images created by others published in a registry; \
	-> to build our own image we create a 
\f4\i Dockerfile
\f1\i0 , with a simple syntax for defining the steps needed to create the image and run it; each instruction in 
\f4\i Dockerfile
\f1\i0  creates a layer in the image; when changing and rebuilding the 
\f4\i Dockerfile
\f1\i0 , only those layers which have changed are rebuilt; all these make the images lightweight, small and fast when compared to other virtualisation technologies\
\

\f0\b Namespaces
\f1\b0  = a technology providing isolated workspace called the container; when running a container, Docker creates a set of namespaces for that container that provide a layer of isolation; each aspect of a container runs in a separate namespace and its access is limited to that namespace;\
	->  Docker Engine uses the following namespaces:\
\pard\tx220\tx720\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li720\fi-720\pardirnatural\qj\partightenfactor0
\ls1\ilvl0\cf0 {\listtext	
\f5 \uc0\u9642 
\f1 	}the 
\f2 pid
\f1  namespace: process isolation (PID: Process ID)\
{\listtext	
\f5 \uc0\u9642 
\f1 	}the 
\f2 net
\f1  namespace: managing network interfaces (NET: Networking)\
{\listtext	
\f5 \uc0\u9642 
\f1 	}the 
\f2 ipc
\f1  namespace: managing access to IPC resources (IPC: InterProcess Communication)\
{\listtext	
\f5 \uc0\u9642 
\f1 	}the 
\f2 mnt
\f1  namespace: managing filesystem mount points (MNT: Mount)\
{\listtext	
\f5 \uc0\u9642 
\f1 	}the 
\f2 uts
\f1  namespace: isolating kernel and version identifiers (UTS: Unix Timesharing System)\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\qj\partightenfactor0
\cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\qj\partightenfactor0

\f0\b \cf0 Control groups 
\f1\b0 = a technology 
\f2 cgroup
\f1  limiting an app to a specific set of resources; cgroups allow Docker Engine to share available hardware resources to containers and optionally enforce limits and constraints (e.g limiting the memory available to a specific container)\
\

\f0\b Union file systems or UnionFS
\f1\b0  = file systems that operate by creating layers making them lightweight and fast; Docker Engine uses UnionFS to provide the building blocks for containers; \
\

\f0\b Container Format 
\f1\b0 = a wrapper/combination of namespaces, control groups and UnionFS. Default container format is 
\f2 libcontainer
\f1 . \
\pard\pardeftab720\sl320\qj\partightenfactor0
\cf0 \
\pard\pardeftab720\sl320\qc\partightenfactor0

\f0\b\fs28 \cf0 \ul \ulc0 REFERENCES:
\f1\b0\fs24 \
\pard\pardeftab720\sl320\qj\partightenfactor0
\cf0 \ulnone \
1) Docker docs. Docker Overview. URL: {\field{\*\fldinst{HYPERLINK "https://docs.docker.com/engine/docker-overview/"}}{\fldrslt \cf5 \expnd0\expndtw0\kerning0
\ul \ulc5 \outl0\strokewidth0 \strokec5 https://docs.docker.com/engine/docker-overview/}}\cf5 \expnd0\expndtw0\kerning0
\ul \ulc5 \outl0\strokewidth0 \strokec5  \
\
\pard\pardeftab720\sl320\qj\partightenfactor0
\cf0 \kerning1\expnd0\expndtw0 \ulnone \outl0\strokewidth0 2) Docker docs. Orientation and setup. URL: {\field{\*\fldinst{HYPERLINK "https://docs.docker.com/get-started/"}}{\fldrslt 
\f6 \cf5 \expnd0\expndtw0\kerning0
\ul \ulc5 \outl0\strokewidth0 \strokec5 https://docs.docker.com/get-started/}}
\f6 \cf5 \expnd0\expndtw0\kerning0
\ul \ulc5 \outl0\strokewidth0 \strokec5  
\f1 \cf0 \kerning1\expnd0\expndtw0 \ulnone \outl0\strokewidth0 \
\
3)\
\
4)}